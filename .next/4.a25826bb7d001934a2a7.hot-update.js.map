{"version":3,"file":"4.a25826bb7d001934a2a7.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import metadata from \"../js/metadata.js\";\nimport Head from \"next/head\";\nimport { TypographyStyle, GoogleFont } from \"react-typography\";\nimport Typography from \"typography\";\nimport githubTheme from \"typography-theme-github\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/styles/hljs\";\nimport MagicDropzone from \"react-magic-dropzone\";\n\ngithubTheme.headerFontFamily = [\"Roboto\", \"sans-serif\"];\ngithubTheme.bodyFontFamily = [\"Roboto\", \"sans-serif\"];\ngithubTheme.headerWeight = 300;\ngithubTheme.bodyWeight = 300;\n\ngithubTheme.overrideThemeStyles = ({ rhythm }, options) => ({\n    \"h1,h2,h3,h4\": {\n        fontFamily: [\"Roboto\", \"sans-serif\"].join(\",\"),\n        fontWeight: 300,\n    },\n    body: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontWeight: 300,\n    },\n});\n\nconst typography = new Typography(githubTheme);\nlet metaData = {};\n\nexport default class Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            address: \"0x09ca59e18c58f25b092a0f2670928f5d0656a331\",\n            metadata: { address: \"\", name: \"\", image: \"\" },\n        };\n    }\n\n    componentDidMount() {\n        metaData = new metadata();\n    }\n\n    onInputChange = async e => {\n        console.log(e.target.value);\n        this.setState({\n            address: e.target.value,\n        });\n    };\n\n    onViewAddress = e => {\n        console.log(\"pressed\");\n        metaData.getAddress(this.state.address).then(response => {\n            console.log(response);\n            if (response.image) {\n                let ipfs = metaData.lookUp(response.image, result => {\n                    let image = result;\n                    response.image = image;\n                    this.setState({ metadata: response });\n                });\n            } else {\n                this.setState({ metadata: response });\n            }\n        });\n    };\n\n    onSubmit = e => {\n        console.log(\"pressed\");\n        metaData.addMetaData(\n            this.state.saveAddress,\n            this.state.saveName,\n            this.state.file,\n        );\n    };\n\n    onDrop = (accepted, rejected, links) => {\n        console.log(accepted);\n        this.setState({\n            file: accepted,\n        });\n    };\n\n    handleSaveChange = prop => event => {\n        this.setState({ [prop]: event.target.value });\n        console.log(this.state);\n    };\n\n    render() {\n        return (\n            <div\n                class=\"markdown\"\n                style={{\n                    maxWidth: \"42rem\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    padding: \"1.5rem 1.125rem\",\n                    paddingTop: \"1.5rem\",\n                }}\n            >\n                <Head>\n                    <TypographyStyle typography={typography} />\n                    <GoogleFont typography={typography} />\n                </Head>\n                <h1>Metadata Viewer</h1>\n                <p>Contract at: </p>\n\n                <pre>\n                    <code>{metaData.contract_address}</code>\n                </pre>\n                <img\n                    src={this.state.metadata.image}\n                    style={{ width: 64, height: 64 }}\n                />\n                <SyntaxHighlighter language=\"JSON\" style={docco}>\n                    {JSON.stringify(this.state.metadata)}\n                </SyntaxHighlighter>\n                <TextField\n                    label=\"Address\"\n                    fullWidth\n                    value={this.state.address}\n                    onChange={this.onInputChange}\n                />\n                <br />\n                <br />\n                <Button variant=\"contained\" onClick={this.onViewAddress}>\n                    View\n                </Button>\n\n                <h1>Metadata Uploader</h1>\n                <p>Upload the following metadata for {metaData.price}:</p>\n                <form class=\"\" noValidate autoComplete=\"off\">\n                    <TextField\n                        fullWidth\n                        label=\"Address\"\n                        onChange={this.handleSaveChange(\"saveAddress\")}\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"Name\"\n                        onChange={this.handleSaveChange(\"saveName\")}\n                    />\n                    <br />\n                    <br />\n                    <label htmlFor=\"flat-button-file\">\n                        <Button component=\"span\" className={\"image_upload\"}>\n                            <MagicDropzone\n                                className=\"Dropzone\"\n                                accept=\"image/jpeg, image/png, .jpg, .jpeg, .png, .svg\"\n                                onDrop={this.onDrop}\n                            >\n                                Upload Image\n                            </MagicDropzone>\n                        </Button>\n                    </label>{\" \"}\n                    <Button variant=\"contained\" onClick={this.onSubmit}>\n                        Save To Ethereum\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAAA;AACA;AAUA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCA;AACA;AAKA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6CA;AACA;AAAA;AACA;AADA;AAGA;AAjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmDA;AACA;AACA;AAAA;AACA;AAHA;AAnDA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;;;AA8CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAlIA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}