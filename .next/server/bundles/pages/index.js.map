{"version":3,"file":"bundles/pages/index.js","sources":["webpack:///webpack/bootstrap 9c2e245580901b384bd8","webpack:///./abi/metadata.json","webpack:///js/metadata.js","webpack:///pages/index.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/Paper\"","webpack:///external \"@material-ui/core/TextField\"","webpack:///external \"eip55\"","webpack:///external \"ethjs\"","webpack:///external \"ipfs-mini\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-json-pretty\"","webpack:///external \"react-magic-dropzone\"","webpack:///external \"react-typography\"","webpack:///external \"typography\"","webpack:///external \"typography-theme-github\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9c2e245580901b384bd8","module.exports = [{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_logo_ipfs\",\"type\":\"string\"}],\"name\":\"addAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_logo_ipfs\",\"type\":\"string\"}],\"name\":\"addByOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getMeOffTheFuckingList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lootDonationBox\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"adresses\",\"outputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_logo_ipfs\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"address\"}],\"name\":\"getByAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"keys\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./abi/metadata.json\n// module id = ./abi/metadata.json\n// module chunks = 3","import Eth from \"ethjs\";\nimport eip55 from \"eip55\";\nimport abi from \"../abi/metadata.json\";\nimport IPFS from \"ipfs-mini\";\nlet reader = {};\nconst eth = new Eth(new Eth.HttpProvider(\"https://ropsten.infura.io\"));\n\nconst ipfs = new IPFS({\n    host: \"ipfs.infura.io\",\n    port: 5001,\n    protocol: \"https\",\n});\n\nexport default class MetaDataContract {\n    constructor() {\n        this.contract_address = \"0x7f0b2a8c93db220637f835ef075e3dbc17beff7d\";\n        this.contract = eth.contract(abi).at(this.contract_address);\n        this.price = 0;\n        console.log(\"constructed\");\n        reader = new FileReader();\n        // uncomment to enable MetaMask support:\n        if (\n            typeof window.web3 !== \"undefined\" &&\n            typeof window.web3.currentProvider !== \"undefined\"\n        ) {\n            eth.setProvider(window.web3.currentProvider);\n            console.log(\"metamask!\");\n        } else {\n            // keep current infura provider\n            console.log(\"yay\");\n        }\n    }\n\n    async getPrice() {\n        return this.contract.getPrice().then(result => {\n            console.log(result[0]);\n            this.price = result[0];\n\n            return Eth.fromWei(result[0], \"ether\");\n        });\n    }\n\n    async getAddress(address) {\n        return this.contract\n            .getByAddress(eip55.encode(address))\n            .then(result => {\n                console.log(result);\n                result[0] = eip55.encode(result[0]);\n                return {\n                    address: result[0],\n                    name: result[1],\n                    image: result[2],\n                };\n            })\n            .catch(err => {\n                console.error(err);\n            });\n    }\n\n    async lookUp(address, callback) {\n        ipfs.cat(address, (err, result) => {\n            console.log(result);\n            callback(result);\n        });\n    }\n\n    async convertBlobToBase64(blob) {\n        console.log(blob);\n        return new Promise((resolve, reject) => {\n            reader.onerror = () => {\n                reader.abort();\n                reject(new DOMException(\"Problem parsing input file.\"));\n            };\n            reader.onload = () => {\n                resolve(reader.result);\n            };\n            console.log(blob);\n            reader.readAsDataURL(blob[0]);\n        });\n    }\n\n    async addMetaData(address, name, image) {\n        let base64 = await this.convertBlobToBase64(image);\n        return new Promise((resolve, reject) => {\n            ipfs.add(base64, (err, result) => {\n                console.log(result);\n                if (err)\n                    reject(new DOMException(\"Couldn't add metadata to IPFS\"));\n\n                return this.contract\n                    .addAddress(address, name, result, {\n                        from: web3.eth.accounts[0],\n                        value: this.price,\n                    })\n                    .then(result => {\n                        resolve(result);\n                    })\n                    .catch(err => {\n                        reject(err);\n                    });\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// js/metadata.js","import metadata from \"../js/metadata.js\";\nimport Head from \"next/head\";\nimport { TypographyStyle, GoogleFont } from \"react-typography\";\nimport Typography from \"typography\";\nimport githubTheme from \"typography-theme-github\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport JSONPretty from \"react-json-pretty\";\nimport MagicDropzone from \"react-magic-dropzone\";\n\ngithubTheme.headerFontFamily = [\"Roboto\", \"sans-serif\"];\ngithubTheme.bodyFontFamily = [\"Roboto\", \"sans-serif\"];\ngithubTheme.headerWeight = 300;\ngithubTheme.bodyWeight = 300;\n\ngithubTheme.overrideThemeStyles = ({ rhythm }, options) => ({\n    \"h1,h2,h3,h4\": {\n        fontFamily: [\"Roboto\", \"sans-serif\"].join(\",\"),\n        fontWeight: 300,\n    },\n    body: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontWeight: 300,\n    },\n});\n\nconst typography = new Typography(githubTheme);\nlet metaData = {};\n\nexport default class Index extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            address: \"0x09ca59e18c58f25b092a0f2670928f5d0656a331\",\n            metadata: { address: \"\", name: \"\", image: \"\" },\n            price: \"NaN\",\n        };\n    }\n\n    componentDidMount() {\n        metaData = new metadata();\n        metaData.getPrice().then(result => {\n            console.log(result);\n            this.setState({ price: result });\n        });\n    }\n\n    onInputChange = async e => {\n        console.log(e.target.value);\n        this.setState({\n            address: e.target.value,\n        });\n    };\n\n    onViewAddress = e => {\n        console.log(\"pressed\");\n        metaData.getAddress(this.state.address).then(response => {\n            console.log(response);\n            if (response.image) {\n                let ipfs = metaData.lookUp(response.image, result => {\n                    let image = result;\n                    response.image = image;\n                    this.setState({ metadata: response });\n                });\n            } else {\n                this.setState({ metadata: response });\n            }\n        });\n    };\n\n    onSubmit = e => {\n        console.log(\"pressed\");\n        metaData.addMetaData(\n            this.state.saveAddress,\n            this.state.saveName,\n            this.state.file,\n        );\n        this.setState({ address: this.state.saveAddress });\n    };\n\n    onDrop = (accepted, rejected, links) => {\n        console.log(accepted);\n        this.setState({\n            file: accepted,\n        });\n    };\n\n    handleSaveChange = prop => event => {\n        this.setState({ [prop]: event.target.value });\n        console.log(this.state);\n    };\n\n    render() {\n        return (\n            <div\n                class=\"markdown\"\n                style={{\n                    maxWidth: \"42rem\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    padding: \"1.5rem 1.125rem\",\n                    paddingTop: \"1.5rem\",\n                }}\n            >\n                <Head>\n                    <TypographyStyle typography={typography} />\n                    <GoogleFont typography={typography} />\n                </Head>\n\n                <h1>Metadata Uploader</h1>\n                <p>Upload the following metadata for {this.state.price} Eth:</p>\n                <form class=\"\" noValidate autoComplete=\"off\">\n                    <TextField\n                        fullWidth\n                        label=\"Address\"\n                        onChange={this.handleSaveChange(\"saveAddress\")}\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"Name\"\n                        onChange={this.handleSaveChange(\"saveName\")}\n                    />\n                    <br />\n                    <br />\n                    <label htmlFor=\"flat-button-file\">\n                        <Button size=\"small\" component=\"span\" className={\"image_upload\"}>\n                            <MagicDropzone\n                                className=\"Dropzone\"\n                                accept=\"image/jpeg, image/png, .jpg, .jpeg, .png, .svg\"\n                                onDrop={this.onDrop}\n                            >\n                                Upload Image\n                            </MagicDropzone>\n                        </Button>\n                    </label>{\" \"}\n                    <Button size=\"small\" variant=\"contained\" onClick={this.onSubmit}>\n                        Save To Ethereum\n                    </Button>\n                </form>\n\n                <h1>Metadata Viewer</h1>\n                <p>Contract at: </p>\n\n                <pre>\n                    <code>{metaData.contract_address}</code>\n                </pre>\n                <img\n                    src={this.state.metadata.image}\n                    style={{ width: 64, height: 64 }}\n                />\n                <JSONPretty\n                    language=\"JSON\"\n                    json={JSON.stringify(this.state.metadata)}\n                />\n                <TextField\n                    label=\"Address\"\n                    fullWidth\n                    value={this.state.address}\n                    onChange={this.onInputChange}\n                />\n                <br />\n                <br />\n                <Button size=\"small\" variant=\"contained\" onClick={this.onViewAddress}>\n                    View\n                </Button>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js","module.exports = require(\"@babel/runtime/regenerator\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@babel/runtime/regenerator\"\n// module id = @babel/runtime/regenerator\n// module chunks = 0 3","module.exports = require(\"@material-ui/core/Button\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/Button\"\n// module id = @material-ui/core/Button\n// module chunks = 3","module.exports = require(\"@material-ui/core/Paper\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/Paper\"\n// module id = @material-ui/core/Paper\n// module chunks = 3","module.exports = require(\"@material-ui/core/TextField\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@material-ui/core/TextField\"\n// module id = @material-ui/core/TextField\n// module chunks = 3","module.exports = require(\"eip55\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"eip55\"\n// module id = eip55\n// module chunks = 3","module.exports = require(\"ethjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ethjs\"\n// module id = ethjs\n// module chunks = 3","module.exports = require(\"ipfs-mini\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ipfs-mini\"\n// module id = ipfs-mini\n// module chunks = 3","module.exports = require(\"next/head\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next/head\"\n// module id = next/head\n// module chunks = 3","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 0 3","module.exports = require(\"react-json-pretty\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-json-pretty\"\n// module id = react-json-pretty\n// module chunks = 3","module.exports = require(\"react-magic-dropzone\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-magic-dropzone\"\n// module id = react-magic-dropzone\n// module chunks = 3","module.exports = require(\"react-typography\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-typography\"\n// module id = react-typography\n// module chunks = 3","module.exports = require(\"typography\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"typography\"\n// module id = typography\n// module chunks = 3","module.exports = require(\"typography-theme-github\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"typography-theme-github\"\n// module id = typography-theme-github\n// module chunks = 3"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;;;;;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAFA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAAA;AACA;AAUA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAhDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmDA;AACA;AAAA;AACA;AADA;AAGA;AAvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyDA;AACA;AACA;AAAA;AACA;AAHA;AAzDA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AA+CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA1IA;AACA;;;;;;;;;;;;;;;;AC/BA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}